name: Code-Quality

on: [pull_request, workflow_dispatch]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: "checkout repository"
        uses: actions/checkout@v3

      - name: "set up python"
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: "install poetry"
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.3.2

      - name: "cache dependencies"
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: "install dependencies"
        run: poetry install

      - name: "run syntax check"
        run: |
          ./bin/syntax.sh

  test:
    runs-on: ubuntu-latest

    steps:
      - name: "checkout repository"
        uses: actions/checkout@v3

      - name: "set up python"
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: "install poetry"
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.3.2

      - name: "cache dependencies"
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: "install dependencies"
        run: poetry install

      - name: "set python path"
        run: echo "PYTHONPATH=.:baler" >> $GITHUB_ENV

      - name: "run tests"
        run: |
          ./bin/tests.sh
