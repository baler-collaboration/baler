import os
import imageio
import numpy as np
import matplotlib.pyplot as plt

# Define directory path and output file path
TIFF_DIRECTORY = "/home/kka011098/baler/workspaces/CFD_workspace/data/test/"
NPZ_FILE_PATH = "/home/kka011098/Moessbauer/baler/workspaces/CFD_workspace/data/output20002000norm.npz"
OUTPUT_PLOT_FILE_PATH = "/home/kka011098/Moessbauer/baler/workspaces/CFD_workspace/data/sum_image_plot20002000norm.png"

def read_tiff_files(directory):
    tiff_files = [file for file in os.listdir(directory) if file.endswith(".tif")]
    data = []
    for file in tiff_files:
        file_path = os.path.join(directory, file)
        try:
            img = imageio.imread(file_path)
            data.append(img)
        except Exception as e:
            print(f"Failed to read file: {file_path}")
            print(e)
    return data

def crop_image(img, x_start, y_start, x_end, y_end):
    cropped_img = img[y_start:y_end, x_start:x_end]
    return cropped_img

def main():
    # Read TIFF files from directory
    data = read_tiff_files(TIFF_DIRECTORY)
    if not data:
        print("No TIFF files found in the directory.")
        return

    # Crop images, convert to float32 and store in a list
    cropped_images = []
    for img in data:
        cropped_img = crop_image(img, 0, 0, 2000, 2000)
        cropped_img = cropped_img.astype(np.float32)
        cropped_images.append(cropped_img)
    
    # Convert cropped images to NumPy array
    data_array = np.array(cropped_images)
    
    # Initialize arrays for sum of even and odd sheets
    sum_even = np.zeros_like(data_array[0])
    sum_odd = np.zeros_like(data_array[0])

    # Loop through all sheets in the 3D array
    for i, sheet in enumerate(data_array):
        if i % 2 == 0:  # Even numbered iteration
            sum_even += sheet
            #print (sum_even)
        else:
            sum_odd += sheet
            #print (sum_odd)
    
    # Calculate the absolute difference between sum of odd and even sheets
    difference = np.abs((sum_odd - sum_even)/86752.0)
    print(np.max(difference), np.min(difference))
    # Create a new .npz file
    npz_data_path = NPZ_FILE_PATH
    
    np.savez(npz_data_path, data=data_array, names=np.array([]))
    print(f"Data saved to: {npz_data_path}")

    # Plot and save the difference image
    plt.imshow(difference, cmap='viridis', vmin=0, vmax=0.01)
    plt.title('Difference between Sum of Odd and Even Numbered Locations')
    plt.colorbar()
    plt.savefig(OUTPUT_PLOT_FILE_PATH)
    print(f"Plot saved as image: {OUTPUT_PLOT_FILE_PATH}")

if __name__ == "__main__":
    main()
